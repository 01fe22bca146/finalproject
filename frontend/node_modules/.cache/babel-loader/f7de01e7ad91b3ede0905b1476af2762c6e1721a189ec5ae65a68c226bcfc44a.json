{"ast":null,"code":"import axios from \"axios\";\nimport { USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_RESET, USER_DETAILS_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS } from \"../constants/userConstant\";\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({\n    type: ORDER_LIST_MY_RESET\n  });\n  dispatch({\n    type: USER_DETAILS_RESET\n  });\n  dispatch({\n    type: USER_LOGOUT\n  });\n};\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/users/login\", {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Contnet-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/users\", {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Contnet-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/${id}`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(\"api/users/profile\", user, config);\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"names":["axios","USER_DETAILS_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_RESET","USER_DETAILS_SUCCESS","USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGOUT","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","logout","dispatch","localStorage","removeItem","type","ORDER_LIST_MY_RESET","login","email","password","config","headers","data","post","payload","setItem","JSON","stringify","error","response","message","register","name","getUserDetails","id","getState","userLogin","userInfo","Authorization","token","get","updateUserProfile","user","put"],"sources":["C:/Users/nayee/Desktop/final project/frontend/src/actions/userAction.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nimport {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_RESET,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n} from \"../constants/userConstant\";\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem(\"userInfo\");\r\n  dispatch({ type: ORDER_LIST_MY_RESET });\r\n  dispatch({ type: USER_DETAILS_RESET });\r\n  dispatch({ type: USER_LOGOUT });\r\n};\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_LOGIN_REQUEST });\r\n    const config = { headers: { \"Content-Type\": \"application/json\" } };\r\n    const { data } = await axios.post(\r\n      \"/api/users/login\",\r\n      { email, password },\r\n      config\r\n    );\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: USER_REGISTER_REQUEST });\r\n    const config = { headers: { \"Contnet-Type\": \"application/json\" } };\r\n    const { data } = await axios.post(\r\n      \"/api/users\",\r\n      { name, email, password },\r\n      config\r\n    );\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    });\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        \"Contnet-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.get(`/api/users/${id}`, config);\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST,\r\n    });\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    const { data } = await axios.put(\"api/users/profile\", user, config);\r\n    dispatch({ type: USER_UPDATE_PROFILE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}